apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations {
    provided
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'portal'
    orgName = 'workarounds'

    publishedGroupId = 'in.workarounds.portal'
    libraryName = 'Portal'
    artifact = 'portal'

    libraryDescription = 'An android library that makes it easy to use floating UIs'

    siteUrl = 'https://github.com/workarounds/portal'
    gitUrl = 'https://github.com/workarounds/portal.git'

    libraryVersion = '1.0.3'

    developerId = 'workarounds'
    developerName = 'Workarounds'
    developerEmail = 'contact@workarounds.in'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

ext {
    supportLibVersion = '23.1.1'
    espressoVersion = '2.2.1'
    runnerVersion = '0.4.1'
    bundlerVersion = '0.1.1'
}

android.libraryVariants.all { variant ->
    // Exclude the jar files from making its way into the final apk.
    // Irrespective of what the path_to_libs_dir is the final jar files end up in libs dir.
    variant.outputs.each { output ->
        output.packageLibrary.exclude("libs/bundler-annotations-${bundlerVersion}.jar")
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportLibVersion"

    // compile time only dependency
    provided "in.workarounds.bundler:bundler-annotations:$bundlerVersion"
    apt "in.workarounds.bundler:bundler-compiler:$bundlerVersion"

    //Tests
    // Unit testing dependencies
    testCompile 'junit:junit:4.12'
    // Set this dependency if you want to use Mockito
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile "org.robolectric:robolectric:3.0"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$runnerVersion"
    androidTestCompile "com.android.support.test:rules:$runnerVersion"

    // Espresso UI Testing dependencies.
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestCompile "com.android.support:support-annotations:$supportLibVersion"
}


if (project.rootProject.file('local.properties').exists()) {
    apply from: rootProject.file('gradle/install-v1.gradle')
    apply from: rootProject.file('gradle/bintray-android-v1.gradle')
}